// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiciosTelemedicina.Models;

#nullable disable

namespace ServiciosTelemedicina.Migrations
{
    [DbContext(typeof(TelemedicinaDbContext))]
    [Migration("20250505062124_TestMapping")]
    partial class TestMapping
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiciosTelemedicina.Models.Antecedente", b =>
                {
                    b.Property<int>("IdAntecedente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_antecedente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAntecedente"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdHistClin")
                        .HasColumnType("int")
                        .HasColumnName("Id_hist_clin");

                    b.HasKey("IdAntecedente")
                        .HasName("PK__Antecede__56EEE240370C2B6E");

                    b.HasIndex("IdHistClin");

                    b.ToTable("Antecedentes");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_cita");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("Id_paciente");

                    b.HasKey("IdCita")
                        .HasName("PK__Citas__5E31E370E302828F");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Diagnostico", b =>
                {
                    b.Property<int>("IdDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_diagnostico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiagnostico"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("IdCita")
                        .HasColumnType("int")
                        .HasColumnName("Id_cita");

                    b.Property<int?>("IdTerapeuta")
                        .HasColumnType("int")
                        .HasColumnName("Id_terapeuta");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdDiagnostico")
                        .HasName("PK__Diagnost__D18EAF9FF264A041");

                    b.HasIndex("IdCita");

                    b.HasIndex("IdTerapeuta");

                    b.ToTable("Diagnosticos");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.HistoriasClinica", b =>
                {
                    b.Property<int>("IdHistClin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_hist_clin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistClin"));

                    b.Property<int?>("IdDiagnostico")
                        .HasColumnType("int")
                        .HasColumnName("Id_diagnostico");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("Id_paciente");

                    b.Property<int?>("IdTratamiento")
                        .HasColumnType("int")
                        .HasColumnName("Id_tratamiento");

                    b.HasKey("IdHistClin")
                        .HasName("PK__Historia__3CAC02F14E3017EA");

                    b.HasIndex("IdDiagnostico");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("Historias_Clinicas", (string)null);
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Informe", b =>
                {
                    b.Property<int>("IdInforme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_informe");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInforme"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdHistClin")
                        .HasColumnType("int")
                        .HasColumnName("Id_hist_clin");

                    b.HasKey("IdInforme")
                        .HasName("PK__Informes__E545C5DB16D6866A");

                    b.HasIndex("IdHistClin");

                    b.ToTable("Informes");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Medicamento", b =>
                {
                    b.Property<int>("IdMedicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_medicamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicamento"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMedicamento")
                        .HasName("PK__Medicame__391D9D47826F42DF");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Notificacion", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_notificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotificacion"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("Id_usuario");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdNotificacion")
                        .HasName("PK__Notifica__2ED2DED3771FB348");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.PermisosAdministrador", b =>
                {
                    b.Property<int>("IdAdmin")
                        .HasColumnType("int")
                        .HasColumnName("Id_admin");

                    b.Property<string>("Permiso")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdAdmin")
                        .HasName("PK_PermisoAdministradores");

                    b.ToTable("PermisosAdministradores");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Tratamiento", b =>
                {
                    b.Property<int>("IdTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_tratamiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTratamiento"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("IdDiagnostico")
                        .HasColumnType("int")
                        .HasColumnName("Id_diagnostico");

                    b.Property<int?>("IdMedicamento")
                        .HasColumnType("int")
                        .HasColumnName("Id_medicamento");

                    b.HasKey("IdTratamiento")
                        .HasName("PK__Tratamie__BF7D0DDCCB1EFACE");

                    b.HasIndex("IdDiagnostico");

                    b.HasIndex("IdMedicamento");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuarios__EF59F762F74DA0D2");

                    b.HasIndex(new[] { "Cedula" }, "UQ__Usuarios__B4ADFE38897EE255")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Administrador", b =>
                {
                    b.HasBaseType("ServiciosTelemedicina.Models.Usuario");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.ToTable("Administradores", (string)null);
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Paciente", b =>
                {
                    b.HasBaseType("ServiciosTelemedicina.Models.Usuario");

                    b.Property<string>("Direccion")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Terapeuta", b =>
                {
                    b.HasBaseType("ServiciosTelemedicina.Models.Usuario");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("Terapeutas", (string)null);
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Antecedente", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.HistoriasClinica", "IdHistClinNavigation")
                        .WithMany("Antecedentes")
                        .HasForeignKey("IdHistClin")
                        .HasConstraintName("FK__Anteceden__Id_hi__59FA5E80");

                    b.Navigation("IdHistClinNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Cita", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK__Citas__Id_pacien__48CFD27E");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Diagnostico", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Cita", "IdCitaNavigation")
                        .WithMany("Diagnosticos")
                        .HasForeignKey("IdCita")
                        .HasConstraintName("FK__Diagnosti__Id_ci__4E88ABD4");

                    b.HasOne("ServiciosTelemedicina.Models.Terapeuta", "IdTerapeutaNavigation")
                        .WithMany("Diagnosticos")
                        .HasForeignKey("IdTerapeuta")
                        .HasConstraintName("FK__Diagnosti__Id_te__4D94879B");

                    b.Navigation("IdCitaNavigation");

                    b.Navigation("IdTerapeutaNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.HistoriasClinica", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Diagnostico", "IdDiagnosticoNavigation")
                        .WithMany("HistoriasClinicas")
                        .HasForeignKey("IdDiagnostico")
                        .HasConstraintName("FK__Historias__Id_di__5629CD9C");

                    b.HasOne("ServiciosTelemedicina.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("HistoriasClinicas")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK__Historias__Id_pa__5535A963");

                    b.HasOne("ServiciosTelemedicina.Models.Tratamiento", "IdTratamientoNavigation")
                        .WithMany("HistoriasClinicas")
                        .HasForeignKey("IdTratamiento")
                        .HasConstraintName("FK__Historias__Id_tr__571DF1D5");

                    b.Navigation("IdDiagnosticoNavigation");

                    b.Navigation("IdPacienteNavigation");

                    b.Navigation("IdTratamientoNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Informe", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.HistoriasClinica", "IdHistClinNavigation")
                        .WithMany("Informes")
                        .HasForeignKey("IdHistClin")
                        .HasConstraintName("FK__Informes__Id_his__5CD6CB2B");

                    b.Navigation("IdHistClinNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Notificacion", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Notificac__Id_us__45F365D3");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.PermisosAdministrador", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Administrador", "IdAdminNavigation")
                        .WithOne("PermisosAdministradore")
                        .HasForeignKey("ServiciosTelemedicina.Models.PermisosAdministrador", "IdAdmin")
                        .IsRequired()
                        .HasConstraintName("FK__PermisosA__Id_ad__3D5E1FD2");

                    b.Navigation("IdAdminNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Tratamiento", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Diagnostico", "IdDiagnosticoNavigation")
                        .WithMany("Tratamientos")
                        .HasForeignKey("IdDiagnostico")
                        .HasConstraintName("FK__Tratamien__Id_di__5165187F");

                    b.HasOne("ServiciosTelemedicina.Models.Medicamento", "IdMedicamentoNavigation")
                        .WithMany("Tratamientos")
                        .HasForeignKey("IdMedicamento")
                        .HasConstraintName("FK__Tratamien__Id_me__52593CB8");

                    b.Navigation("IdDiagnosticoNavigation");

                    b.Navigation("IdMedicamentoNavigation");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Administrador", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("ServiciosTelemedicina.Models.Administrador", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Paciente", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("ServiciosTelemedicina.Models.Paciente", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Terapeuta", b =>
                {
                    b.HasOne("ServiciosTelemedicina.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("ServiciosTelemedicina.Models.Terapeuta", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Cita", b =>
                {
                    b.Navigation("Diagnosticos");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Diagnostico", b =>
                {
                    b.Navigation("HistoriasClinicas");

                    b.Navigation("Tratamientos");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.HistoriasClinica", b =>
                {
                    b.Navigation("Antecedentes");

                    b.Navigation("Informes");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Medicamento", b =>
                {
                    b.Navigation("Tratamientos");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Tratamiento", b =>
                {
                    b.Navigation("HistoriasClinicas");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Usuario", b =>
                {
                    b.Navigation("Notificaciones");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Administrador", b =>
                {
                    b.Navigation("PermisosAdministradore");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Paciente", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("HistoriasClinicas");
                });

            modelBuilder.Entity("ServiciosTelemedicina.Models.Terapeuta", b =>
                {
                    b.Navigation("Diagnosticos");
                });
#pragma warning restore 612, 618
        }
    }
}
